(*
This file is generated by Cogent

*)

theory Generated_ShallowShared
imports "Cogent.Util"
"CogentShallow.ShallowUtil"
begin

type_synonym 'a WordArray = "'a list "

record ('a, 'b) T0 =
  p1\<^sub>f :: "'a"
  p2\<^sub>f :: "'b"

record ('a, 'b, 'c, 'd, 'e, 'f) WordArrayMapNoBreakP =
  arr\<^sub>f :: "'a"
  frm\<^sub>f :: "'b"
  to\<^sub>f :: "'c"
  f\<^sub>f :: "'d"
  acc\<^sub>f :: "'e"
  obsv\<^sub>f :: "'f"

record ('a, 'b, 'c) ElemAO =
  elem\<^sub>f :: "'a"
  acc\<^sub>f :: "'b"
  obsv\<^sub>f :: "'c"

record ('a, 'b, 'c) WordArrayPutP =
  arr\<^sub>f :: "'a"
  idx\<^sub>f :: "'b"
  val\<^sub>f :: "'c"

type_synonym  WordArrayIndex = "32 word"

type_synonym 'a WordArrayPutP\<^sub>T = "('a WordArray,  WordArrayIndex, 'a) WordArrayPutP"

type_synonym ('a, 'acc, 'obsv) ElemAO\<^sub>T = "('a, 'acc, 'obsv) ElemAO"

type_synonym ('a, 'acc, 'obsv) WordArrayFoldNoBreakF = "('a, 'acc, 'obsv) ElemAO\<^sub>T \<Rightarrow> 'acc"

type_synonym ('a, 'acc, 'obsv) WordArrayFoldNoBreakP\<^sub>T = "('a WordArray,  WordArrayIndex,  WordArrayIndex, ('a, 'acc, 'obsv) WordArrayFoldNoBreakF, 'acc, 'obsv) WordArrayMapNoBreakP"

type_synonym ('a, 'acc, 'obsv) WordArrayMapNoBreakF = "('a, 'acc, 'obsv) ElemAO\<^sub>T \<Rightarrow> ('a, 'acc) T0"

type_synonym ('a, 'acc, 'obsv) WordArrayMapNoBreakP\<^sub>T = "('a WordArray,  WordArrayIndex,  WordArrayIndex, ('a, 'acc, 'obsv) WordArrayMapNoBreakF, 'acc, 'obsv) WordArrayMapNoBreakP"

consts wordarray_get :: "('a WordArray,  WordArrayIndex) T0 \<Rightarrow> 'a"

consts wordarray_length :: "'a WordArray \<Rightarrow> 32 word"

consts wordarray_put2 :: "'a WordArrayPutP\<^sub>T \<Rightarrow> 'a WordArray"

consts wordarray_fold_no_break :: "('a, 'acc, 'obsv) WordArrayFoldNoBreakP\<^sub>T \<Rightarrow> 'acc"

consts wordarray_map_no_break :: "('a, 'acc, 'obsv) WordArrayMapNoBreakP\<^sub>T \<Rightarrow> ('a WordArray, 'acc) T0"

end
